{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aldodominguezchavez/Documents/Programming/React/react-complete-course/next-js-meetup-project/pages/[meetupId]/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Fragment } from 'react';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nvar MeetupDetails = function MeetupDetails(props) {\n  _s();\n\n  var router = useRouter();\n  var _props$meetupData = props.meetupData,\n      image = _props$meetupData.image,\n      title = _props$meetupData.title,\n      address = _props$meetupData.address,\n      description = _props$meetupData.description;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Here you can find the meetup details!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: image,\n      title: title,\n      address: address,\n      description: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(MeetupDetails, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/aldodominguezchavez/Documents/Programming/React/react-complete-course/next-js-meetup-project/pages/[meetupId]/index.js"],"names":["Fragment","useRouter","Head","MeetupDetail","MeetupDetails","props","router","meetupData","image","title","address","description"],"mappings":";;;;;;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAAA;;AAC3B,MAAMC,MAAM,GAAGL,SAAS,EAAxB;AAD2B,0BAGoBI,KAAK,CAACE,UAH1B;AAAA,MAGnBC,KAHmB,qBAGnBA,KAHmB;AAAA,MAGZC,KAHY,qBAGZA,KAHY;AAAA,MAGLC,OAHK,qBAGLA,OAHK;AAAA,MAGIC,WAHJ,qBAGIA,WAHJ;AAK3B,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA,kBAAQF;AAAR;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AACI,QAAA,IAAI,EAAC,aADT;AAEI,QAAA,OAAO,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAQI,QAAC,YAAD;AACI,MAAA,KAAK,EAAED,KADX;AAEI,MAAA,KAAK,EAAEC,KAFX;AAGI,MAAA,OAAO,EAAEC,OAHb;AAII,MAAA,WAAW,EAAEC;AAJjB;AAAA;AAAA;AAAA;AAAA,aARJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAiBH,CAtBD;;GAAMP,a;UACaH,S;;;KADbG,a;;AA4EN,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from 'mongodb';\nimport { Fragment } from 'react';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\n\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nconst MeetupDetails = props => {\n    const router = useRouter();\n\n    const { image, title, address, description } = props.meetupData;\n\n    return (\n        <Fragment>\n            <Head>\n                <title>{title}</title>\n                <meta \n                    name='description'\n                    content='Here you can find the meetup details!'\n                />\n            </Head>\n            <MeetupDetail \n                image={image}\n                title={title}\n                address={address}\n                description={description}\n            />\n        </Fragment>\n    );\n};\n\nexport async function getStaticPaths() {\n\n    const client = await MongoClient.connect('mongodb+srv://root:ThisIsTheCode1!@cluster0.ntlux.mongodb.net/meetups?retryWrites=true&w=majority');\n\n    const db = client.db();\n    const meetupsCollection = db.collection('meetups');\n    \n    const meetupIds = await meetupsCollection.find({}, { _id: 1 }).toArray();\n    console.log(meetupIds);\n    \n    client.close();\n\n\n    return {\n        fallback: false,\n        paths: meetupIds.map(meetup => ({\n            params: {\n                meetupId: meetup._id.toString(),\n            }\n        }))\n    }\n}\n\nexport async function getStaticProps(context) {\n    //fetch data for the specific meetup\n\n    const meetupId = context.params.meetupId;\n    \n    const client = await MongoClient.connect('mongodb+srv://root:ThisIsTheCode1!@cluster0.ntlux.mongodb.net/meetups?retryWrites=true&w=majority');\n\n    const db = client.db();\n    const meetupsCollection = db.collection('meetups');\n    \n    const selectedMeetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId) });\n    console.log(selectedMeetup);\n    \n    client.close();\n\n    return {\n        props: {\n            meetupData: {\n                id: selectedMeetup._id.toString(),\n                title: selectedMeetup.title,\n                address: selectedMeetup.address,\n                image: selectedMeetup.image,\n                description: selectedMeetup.description,\n            }\n        }\n    }\n\n}\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}